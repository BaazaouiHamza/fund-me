{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x05fe6c5a42a3e9c9c5bb841addf1e132f0ad788e62b50ce61f0eabe0ca7a9ad3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "977687",
    "logsBloom": "0x
    "blockHash": "0xd4aaccb02caeea1446fc02f82cc48c15b2f992d6c6415e08aae532df1dc27a18",
    "transactionHash": "0x05fe6c5a42a3e9c9c5bb841addf1e132f0ad788e62b50ce61f0eabe0ca7a9ad3",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "977687",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "4ef5d6ae15809de7564bae07c59379af",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        uint256 minimumUSD = 50 * 10 ** 18;\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= minimumUSD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= minimumUSD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner);\\n        _;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        payable(msg.sender).transfer(address(this).balance);\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        payable(msg.sender).transfer(address(this).balance);\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n      return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x0395bfa0280362de14159ba3018e0dea3779593606e653a7c86580aa52e02960\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x6b55163f0ad894601ae21be387c7caed8c6d591b086505e59ae0297f8f83a2db\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011c8380380620011c8833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110496200017f6000396000818161028a0152818161043901526105c901526110496000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e8578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a06565b610199565b6040516100b49190610a4c565b60405180910390f35b3480156100c957600080fd5b506100d26101e1565b6040516100df9190610a4c565b60405180910390f35b6100f0610288565b005b3480156100fe57600080fd5b50610107610435565b6040516101149190610a76565b60405180910390f35b34801561012957600080fd5b5061013261045d565b60405161013f9190610af0565b60405180910390f35b610150610487565b005b61015a6105c7565b005b34801561016857600080fd5b50610183600480360381019061017e9190610b37565b6107d8565b6040516101909190610a76565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561024b57600080fd5b505afa15801561025f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102839190610b79565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610326573d6000803e3d6000fd5b5060005b6001805490508110156103d25760006001828154811061034d5761034c610ba6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103ca90610c04565b91505061032a565b50600067ffffffffffffffff8111156103ee576103ed610c4d565b5b60405190808252806020026020018201604052801561041c5781602001602082028036833780820191505090505b50600190805190602001906104329291906108fc565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006802b5e3af16b18800009050806104cb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461082090919063ffffffff16565b101561050c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050390610cd9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055a9190610cf9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061f57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610665573d6000803e3d6000fd5b50600060018054806020026020016040519081016040528092919081815260200182805480156106ea57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106a0575b5050505050905060005b815181101561077457600082828151811061071257610711610ba6565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076c90610c04565b9150506106f4565b50600067ffffffffffffffff8111156107905761078f610c4d565b5b6040519080825280602002602001820160405280156107be5781602001602082028036833780820191505090505b50600190805190602001906107d49291906108fc565b5050565b6000600182815481106107ee576107ed610ba6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061082c8361085c565b90506000670de0b6b3a764000085836108459190610d4f565b61084f9190610dd8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108a557600080fd5b505afa1580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190610e81565b5050509150506402540be400816108f49190610efc565b915050919050565b828054828255906000526020600020908101928215610975579160200282015b828111156109745782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061091c565b5b5090506109829190610986565b5090565b5b8082111561099f576000816000905550600101610987565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109d3826109a8565b9050919050565b6109e3816109c8565b81146109ee57600080fd5b50565b600081359050610a00816109da565b92915050565b600060208284031215610a1c57610a1b6109a3565b5b6000610a2a848285016109f1565b91505092915050565b6000819050919050565b610a4681610a33565b82525050565b6000602082019050610a616000830184610a3d565b92915050565b610a70816109c8565b82525050565b6000602082019050610a8b6000830184610a67565b92915050565b6000819050919050565b6000610ab6610ab1610aac846109a8565b610a91565b6109a8565b9050919050565b6000610ac882610a9b565b9050919050565b6000610ada82610abd565b9050919050565b610aea81610acf565b82525050565b6000602082019050610b056000830184610ae1565b92915050565b610b1481610a33565b8114610b1f57600080fd5b50565b600081359050610b3181610b0b565b92915050565b600060208284031215610b4d57610b4c6109a3565b5b6000610b5b84828501610b22565b91505092915050565b600081519050610b7381610b0b565b92915050565b600060208284031215610b8f57610b8e6109a3565b5b6000610b9d84828501610b64565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0f82610a33565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c4257610c41610bd5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cc3601b83610c7c565b9150610cce82610c8d565b602082019050919050565b60006020820190508181036000830152610cf281610cb6565b9050919050565b6000610d0482610a33565b9150610d0f83610a33565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d4457610d43610bd5565b5b828201905092915050565b6000610d5a82610a33565b9150610d6583610a33565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d9e57610d9d610bd5565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610de382610a33565b9150610dee83610a33565b925082610dfe57610dfd610da9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e2881610e09565b8114610e3357600080fd5b50565b600081519050610e4581610e1f565b92915050565b6000819050919050565b610e5e81610e4b565b8114610e6957600080fd5b50565b600081519050610e7b81610e55565b92915050565b600080600080600060a08688031215610e9d57610e9c6109a3565b5b6000610eab88828901610e36565b9550506020610ebc88828901610e6c565b9450506040610ecd88828901610b64565b9350506060610ede88828901610b64565b9250506080610eef88828901610e36565b9150509295509295909350565b6000610f0782610e4b565b9150610f1283610e4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f5157610f50610bd5565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f8e57610f8d610bd5565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fcb57610fca610bd5565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561100857611007610bd5565b5b82820290509291505056fea264697066735822122030de941fd1adb9549b4392ff97bb2192496d225e2b74ed6456fadea7254d8b5c64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e8578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a06565b610199565b6040516100b49190610a4c565b60405180910390f35b3480156100c957600080fd5b506100d26101e1565b6040516100df9190610a4c565b60405180910390f35b6100f0610288565b005b3480156100fe57600080fd5b50610107610435565b6040516101149190610a76565b60405180910390f35b34801561012957600080fd5b5061013261045d565b60405161013f9190610af0565b60405180910390f35b610150610487565b005b61015a6105c7565b005b34801561016857600080fd5b50610183600480360381019061017e9190610b37565b6107d8565b6040516101909190610a76565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561024b57600080fd5b505afa15801561025f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102839190610b79565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610326573d6000803e3d6000fd5b5060005b6001805490508110156103d25760006001828154811061034d5761034c610ba6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103ca90610c04565b91505061032a565b50600067ffffffffffffffff8111156103ee576103ed610c4d565b5b60405190808252806020026020018201604052801561041c5781602001602082028036833780820191505090505b50600190805190602001906104329291906108fc565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006802b5e3af16b18800009050806104cb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461082090919063ffffffff16565b101561050c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050390610cd9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055a9190610cf9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061f57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610665573d6000803e3d6000fd5b50600060018054806020026020016040519081016040528092919081815260200182805480156106ea57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106a0575b5050505050905060005b815181101561077457600082828151811061071257610711610ba6565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076c90610c04565b9150506106f4565b50600067ffffffffffffffff8111156107905761078f610c4d565b5b6040519080825280602002602001820160405280156107be5781602001602082028036833780820191505090505b50600190805190602001906107d49291906108fc565b5050565b6000600182815481106107ee576107ed610ba6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061082c8361085c565b90506000670de0b6b3a764000085836108459190610d4f565b61084f9190610dd8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108a557600080fd5b505afa1580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190610e81565b5050509150506402540be400816108f49190610efc565b915050919050565b828054828255906000526020600020908101928215610975579160200282015b828111156109745782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061091c565b5b5090506109829190610986565b5090565b5b8082111561099f576000816000905550600101610987565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109d3826109a8565b9050919050565b6109e3816109c8565b81146109ee57600080fd5b50565b600081359050610a00816109da565b92915050565b600060208284031215610a1c57610a1b6109a3565b5b6000610a2a848285016109f1565b91505092915050565b6000819050919050565b610a4681610a33565b82525050565b6000602082019050610a616000830184610a3d565b92915050565b610a70816109c8565b82525050565b6000602082019050610a8b6000830184610a67565b92915050565b6000819050919050565b6000610ab6610ab1610aac846109a8565b610a91565b6109a8565b9050919050565b6000610ac882610a9b565b9050919050565b6000610ada82610abd565b9050919050565b610aea81610acf565b82525050565b6000602082019050610b056000830184610ae1565b92915050565b610b1481610a33565b8114610b1f57600080fd5b50565b600081359050610b3181610b0b565b92915050565b600060208284031215610b4d57610b4c6109a3565b5b6000610b5b84828501610b22565b91505092915050565b600081519050610b7381610b0b565b92915050565b600060208284031215610b8f57610b8e6109a3565b5b6000610b9d84828501610b64565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0f82610a33565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c4257610c41610bd5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cc3601b83610c7c565b9150610cce82610c8d565b602082019050919050565b60006020820190508181036000830152610cf281610cb6565b9050919050565b6000610d0482610a33565b9150610d0f83610a33565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d4457610d43610bd5565b5b828201905092915050565b6000610d5a82610a33565b9150610d6583610a33565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d9e57610d9d610bd5565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610de382610a33565b9150610dee83610a33565b925082610dfe57610dfd610da9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e2881610e09565b8114610e3357600080fd5b50565b600081519050610e4581610e1f565b92915050565b6000819050919050565b610e5e81610e4b565b8114610e6957600080fd5b50565b600081519050610e7b81610e55565b92915050565b600080600080600060a08688031215610e9d57610e9c6109a3565b5b6000610eab88828901610e36565b9550506020610ebc88828901610e6c565b9450506040610ecd88828901610b64565b9350506060610ede88828901610b64565b9250506080610eef88828901610e36565b9150509295509295909350565b6000610f0782610e4b565b9150610f1283610e4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f5157610f50610bd5565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f8e57610f8d610bd5565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fcb57610fca610bd5565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561100857611007610bd5565b5b82820290509291505056fea264697066735822122030de941fd1adb9549b4392ff97bb2192496d225e2b74ed6456fadea7254d8b5c64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}